#!/bin/bash

set -e

usage() {
cat <<EOF
usage: $0 [OPTIONS] [-m META-INF] [-o OUTPUT] <ubuntu-rootfs.tar.gz>

Script to create an updater file (update.zip) for the Ubuntu RootFS.

OPTIONS:
  -h	Show this message
  -m	META-INF reference folder (default 'pwd'/META-INF)
  -o    Output image (default to <ubuntu-rootfs>.zip)

The Ubuntu RootFS format is based on the rootfs created by the OEM
2.0 based live-builder, with the rootfs contained at the binary folder.
EOF
}

METAINF=${PWD}/META-INF

while getopts "hm:o:" OPTION
do
    case $OPTION in
        h)
            usage
            exit 1
            ;;
        m)
            METAINF=$OPTARG
            ;;
        o)
            OUTPUT=$OPTARG
            ;;
        ?)
            usage
            exit
            ;;
    esac
done
shift $(($OPTIND - 1))

# Validate the build number
if [ -z $1 ]; then
    echo Please provide a valid ubuntu rootfs as argument
    usage
    exit 1
fi
ROOTFS=$1

# In case we don't have an OUTPUT argument
if [ -z $OUTPUT ]; then
    OUTPUT=${ROOTFS/tar.gz/zip}
fi

WORKDIR=$(mktemp -d)

# Populate the target zip file
cp -av ${METAINF} ${WORKDIR}
cp -av ${ROOTFS} ${WORKDIR}
IMAGE=$(basename $ROOTFS)
sed -i "s/#UBUNTUROOTFS#/$IMAGE/" ${WORKDIR}/META-INF/com/google/android/updater-script
cat > ${WORKDIR}/ubuntu_deploy.sh << 'EOF'
#!/sbin/sh

android_boot=/system/boot

ubuntu=/data/ubuntu
ubuntu_boot=$ubuntu/boot
ubuntu_bak=/data/ubuntu_bak

click=$ubuntu/opt/click.ubuntu.com
click_bak=$ubuntu_bak/click

phablet_home=$ubuntu/home/phablet
phablet_home_bak=$ubuntu_bak/home

timezone=$ubuntu/etc/timezone
timezone_bak=$ubuntu_bak/timezone

ofono=$ubuntu/var/lib/ofono
ofono_bak=$ubuntu_bak/ofono

network_settings=$ubuntu/etc/NetworkManager/system-connections
network_settings_bak=$ubuntu_bak/nm_connections

tmp_extract=/data/ubuntu_tmp_extract

backup() {
    mkdir -p $ubuntu_bak
    if [ -d $2 ]; then
        echo "Removing previous backout of $1"
        rm -rf $2
    fi
    if [ -d $1 ]; then
        echo "Backing up $1 to $2"
        mv $1 $2
    fi
}

restore() {
    if [ -d $2 ]; then
        echo "Restoring $1 from $2"
        rm -rf $1
        mv $2 $1
    fi
}

copy_android_ramdisk() {
    if [ -f $android_boot/android-ramdisk.img ]; then
        cp -f $android_boot/android-ramdisk.img $ubuntu_boot
    fi
}

deploy_ubuntu() {
    echo "Deploying Ubuntu"
    if [ -d $tmp_extract ]; then
        rm -rf $tmp_extract
    fi
    mkdir $tmp_extract
    tar --numeric-owner -xzf /data/ubuntu-rootfs.tar.gz -C $tmp_extract
    rm /data/ubuntu-rootfs.tar.gz
    if [ -d $ubuntu ]; then
        rm -rf $ubuntu
    fi
    mv $tmp_extract/binary $ubuntu
    rm -rf $tmp_extract
}

backup $phablet_home $phablet_home_bak
backup $network_settings $network_settings_bak
backup $ofono $ofono_bak
backup $timezone $timezone_bak
backup $click $click_bak
deploy_ubuntu
copy_android_ramdisk
restore $phablet_home $phablet_home_bak
restore $network_settings $network_settings_bak
restore $ofono $ofono_bak
restore $timezone $timezone_bak
restore $click $click_bak
EOF


# Create and publish the update zip file
cd ${WORKDIR}
zip -r ${OUTPUT} *

# Clean up
rm -r ${WORKDIR}

echo Update file ${OUTPUT} created successfully
